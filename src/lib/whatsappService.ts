// src/lib/whatsappService.ts
import twilio from 'twilio';
import { google } from '@ai-sdk/google';
import { streamText } from 'ai';
import { Redis } from '@upstash/redis';
import { kmcContextTool } from './kmcContextTool';

interface ChatMessage {
    role: 'user' | 'assistant' | 'system';
    content: string;
    timestamp?: Date;
}

interface MenuOption {
    number: string;
    english: string;
    marathi: string;
    hindi: string;
    category: string;
}

export class WhatsAppService {
    private twilioClient: twilio.Twilio;
    private redis: Redis;

    // Predefined menu options
    private menuOptions: MenuOption[] = [
        {
            number: "1",
            english: "Property Tax Payment",
            marathi: "рдорд┐рд│рдХрдд рдХрд░ рднрд░рдгрд╛",
            hindi: "рд╕рдВрдкрддреНрддрд┐ рдХрд░ рднреБрдЧрддрд╛рди",
            category: "propertyTax"
        },
        {
            number: "2",
            english: "Water Bill Payment",
            marathi: "рдкрд╛рдгреА рдмрд┐рд▓ рднрд░рдгрд╛",
            hindi: "рдкрд╛рдиреА рдХрд╛ рдмрд┐рд▓ рднреБрдЧрддрд╛рди",
            category: "waterSupply"
        },
        {
            number: "3",
            english: "Birth Certificate",
            marathi: "рдЬрдиреНрдо рдкреНрд░рдорд╛рдгрдкрддреНрд░",
            hindi: "рдЬрдиреНрдо рдкреНрд░рдорд╛рдг рдкрддреНрд░",
            category: "birthCertificate"
        },
        {
            number: "4",
            english: "Death Certificate",
            marathi: "рдореГрддреНрдпреВ рдкреНрд░рдорд╛рдгрдкрддреНрд░",
            hindi: "рдореГрддреНрдпреБ рдкреНрд░рдорд╛рдг рдкрддреНрд░",
            category: "deathCertificate"
        },
        {
            number: "5",
            english: "Business License",
            marathi: "рд╡реНрдпрд╡рд╕рд╛рдп рдкрд░рд╡рд╛рдирд╛",
            hindi: "рд╡реНрдпрд╛рдкрд╛рд░ рд▓рд╛рдЗрд╕реЗрдВрд╕",
            category: "businessLicense"
        },
        {
            number: "6",
            english: "Register Complaint",
            marathi: "рддрдХреНрд░рд╛рд░ рдиреЛрдВрджрд╡рд╛",
            hindi: "рд╢рд┐рдХрд╛рдпрдд рджрд░реНрдЬ рдХрд░реЗрдВ",
            category: "complaint"
        },
        {
            number: "7",
            english: "Contact Information",
            marathi: "рд╕рдВрдкрд░реНрдХ рдорд╛рд╣рд┐рддреА",
            hindi: "рд╕рдВрдкрд░реНрдХ рдЬрд╛рдирдХрд╛рд░реА",
            category: "contact"
        },
        {
            number: "8",
            english: "Other / Type your question",
            marathi: "рдЗрддрд░ / рдЖрдкрд▓рд╛ рдкреНрд░рд╢реНрди рдЯрд╛рдЗрдк рдХрд░рд╛",
            hindi: "рдЕрдиреНрдп / рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рдЯрд╛рдЗрдк рдХрд░реЗрдВ",
            category: "freeText"
        }
    ];

    constructor(accountSid: string, authToken: string) {
        this.twilioClient = twilio(accountSid, authToken);

        // Initialize Upstash Redis
        this.redis = new Redis({
            url: process.env.UPSTASH_REDIS_REST_URL!,
            token: process.env.UPSTASH_REDIS_REST_TOKEN!,
        });
    }

    async handleIncomingMessage(from: string, body: string): Promise<string> {
        try {
            const phoneNumber = from.replace('whatsapp:', '');

            // Get data from Redis with proper typing
            const historyData = await this.redis.get(`chat:${phoneNumber}`);
            const userState = await this.redis.get(`state:${phoneNumber}`) || 'initial';
            const userLanguage = await this.redis.get(`lang:${phoneNumber}`) || '';

            // Parse history data safely
            let history: ChatMessage[] = [];
            if (historyData && Array.isArray(historyData)) {
                history = historyData as ChatMessage[];
            } else if (typeof historyData === 'string') {
                try {
                    history = JSON.parse(historyData);
                } catch {
                    history = [];
                }
            }

            console.log(`ЁЯФН DEBUG: Phone: ${phoneNumber}, State: ${userState}, Message: "${body}", History length: ${history.length}`);

            // Check if it's the first message or initial state
            if (history.length === 0 && userState === 'initial') {
                await this.redis.setex(`state:${phoneNumber}`, 3600, 'language_selection'); // 1 hour TTL
                console.log(`тЬЕ Set state to language_selection for ${phoneNumber}`);
                return this.getLanguageSelectionMessage();
            }

            // Handle language selection
            if (userState === 'language_selection') {
                const language = this.handleLanguageSelection(body, phoneNumber);
                if (language) {
                    console.log(`тЬЕ Language selected: ${language} for ${phoneNumber}`);
                    await this.redis.setex(`lang:${phoneNumber}`, 3600, language);
                    await this.redis.setex(`state:${phoneNumber}`, 3600, 'menu_shown');
                    return this.getMainMenuMessage(language as 'english' | 'marathi' | 'hindi');
                } else {
                    console.log(`тЭМ Invalid language choice: "${body}" for ${phoneNumber}`);
                    return this.getLanguageSelectionMessage();
                }
            }

            // Check if user selected a numbered option
            const selectedOption = this.parseMenuSelection(body);
            if (selectedOption) {
                const language = (userLanguage as string) || 'english';
                const response = await this.handleMenuSelection(selectedOption, phoneNumber, language);

                // Update history in Redis
                await this.updateConversationHistory(phoneNumber, body, response);

                return response;
            }

            // Handle free text or show menu again if user seems lost
            if (this.shouldShowMenu(body)) {
                const language = (userLanguage as string) || 'english';
                return this.getMainMenuMessage(language as 'english' | 'marathi' | 'hindi');
            }

            // Process with AI for free text
            const language = (userLanguage as string) || 'english';
            const response = await this.processWithKMCAI(body, history, language);

            // Update conversation history in Redis
            await this.updateConversationHistory(phoneNumber, body, response);

            // Add menu reminder at the end
            return response + "\n\n" + this.getMenuReminder(language);

        } catch (error) {
            console.error('тЭМ WhatsApp message processing error:', error);
            return "Sorry, I'm having trouble right now. Type 'menu' to see options or contact KMC at 0231-2540291.";
        }
    }

    private async updateConversationHistory(phoneNumber: string, userMessage: string, botResponse: string): Promise<void> {
        try {
            // Get existing history
            const historyData = await this.redis.get(`chat:${phoneNumber}`) || [];
            let history: ChatMessage[] = [];

            if (Array.isArray(historyData)) {
                history = historyData as ChatMessage[];
            } else if (typeof historyData === 'string') {
                try {
                    history = JSON.parse(historyData);
                } catch {
                    history = [];
                }
            }

            // Add new messages
            history.push(
                { role: 'user', content: userMessage, timestamp: new Date() },
                { role: 'assistant', content: botResponse, timestamp: new Date() }
            );

            // Keep only last 20 messages and save to Redis with 1 hour TTL
            const recentHistory = history.slice(-20);
            await this.redis.setex(`chat:${phoneNumber}`, 3600, JSON.stringify(recentHistory));

            console.log(`ЁЯТ╛ Updated conversation history for ${phoneNumber}, total messages: ${recentHistory.length}`);
        } catch (error) {
            console.error('тЭМ Failed to update conversation history:', error);
        }
    }

    private getLanguageSelectionMessage(): string {
        return `ЁЯПЫя╕П *Welcome to Kolhapur Municipal Corporation*
рдХреЛрд▓реНрд╣рд╛рдкреВрд░ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХреЗрдд рдЖрдкрд▓реЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ

Please choose your language / рдХреГрдкрдпрд╛ рдЖрдкрд▓реА рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛:

*1* - English
*2* - рдорд░рд╛рдареА (Marathi)  
*3* - рд╣рд┐рдВрджреА (Hindi)

Reply with the number of your choice.`;
    }

    private handleLanguageSelection(message: string, phoneNumber: string): string | null {
        const choice = message.trim().toLowerCase();

        console.log(`ЁЯФН Language selection input: "${choice}" for ${phoneNumber}`);

        if (choice === '1' || choice.includes('english')) {
            console.log(`тЬЕ Language set to English for ${phoneNumber}`);
            return 'english';
        } else if (choice === '2' || choice.includes('рдорд░рд╛рдареА') || choice.includes('marathi')) {
            console.log(`тЬЕ Language set to Marathi for ${phoneNumber}`);
            return 'marathi';
        } else if (choice === '3' || choice.includes('рд╣рд┐рдВрджреА') || choice.includes('hindi')) {
            console.log(`тЬЕ Language set to Hindi for ${phoneNumber}`);
            return 'hindi';
        }

        console.log(`тЭМ No language match for: "${choice}"`);
        return null;
    }

    private getMainMenuMessage(language: 'english' | 'marathi' | 'hindi'): string {
        const header = {
            english: "ЁЯПЫя╕П *KMC Services Menu*\nWhat can I help you with today?",
            marathi: "ЁЯПЫя╕П *KMC рд╕реЗрд╡рд╛ рдореЗрдиреВ*\nрдЖрдЬ рдореА рддреБрдордЪреА рдХрд╛рдп рдорджрдд рдХрд░реВ рд╢рдХрддреЛ?",
            hindi: "ЁЯПЫя╕П *KMC рд╕реЗрд╡рд╛ рдореЗрдиреВ*\nрдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреНрдпрд╛ рдорджрдд рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?"
        };

        const footer = {
            english: "\nЁЯТм *Choose a number (1-8) or type your question directly*",
            marathi: "\nЁЯТм *рд╕рдВрдЦреНрдпрд╛ рдирд┐рд╡рдбрд╛ (1-8) рдХрд┐рдВрд╡рд╛ рдЖрдкрд▓рд╛ рдкреНрд░рд╢реНрди рдереЗрдЯ рдЯрд╛рдЗрдк рдХрд░рд╛*",
            hindi: "\nЁЯТм *рд╕рдВрдЦреНрдпрд╛ рдЪреБрдиреЗрдВ (1-8) рдпрд╛ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рд╕реАрдзреЗ рдЯрд╛рдЗрдк рдХрд░реЗрдВ*"
        };

        let menu = header[language] + "\n\n";

        this.menuOptions.forEach(option => {
            const text = language === 'marathi' ? option.marathi :
                language === 'hindi' ? option.hindi : option.english;
            menu += `*${option.number}* - ${text}\n`;
        });

        menu += footer[language];

        return menu;
    }

    private parseMenuSelection(message: string): MenuOption | null {
        const trimmed = message.trim();

        // Check for direct number selection (1, 2, 3, etc.)
        const option = this.menuOptions.find(opt => opt.number === trimmed);
        if (option) return option;

        // Check for text matching any option in any language
        const lowerMessage = message.toLowerCase();
        return this.menuOptions.find(opt =>
            lowerMessage.includes(opt.english.toLowerCase()) ||
            lowerMessage.includes(opt.marathi.toLowerCase()) ||
            lowerMessage.includes(opt.hindi.toLowerCase())
        ) || null;
    }

    private async handleMenuSelection(option: MenuOption, phoneNumber: string, language: string): Promise<string> {
        // Set user context for this service in Redis
        await this.redis.setex(`context:${phoneNumber}`, 3600, `service_${option.category}`);

        switch (option.category) {
            case 'propertyTax':
                return await this.getPropertyTaxInfo(language);

            case 'waterSupply':
                return await this.getWaterSupplyInfo(language);

            case 'birthCertificate':
            case 'deathCertificate':
                return await this.getCertificateInfo(option.category, language);

            case 'businessLicense':
                return await this.getBusinessLicenseInfo(language);

            case 'complaint':
                return await this.getComplaintInfo(language);

            case 'contact':
                return this.getContactInfo(language);

            case 'freeText':
                const prompt = {
                    english: "Please type your question about KMC services, and I'll help you:",
                    marathi: "рдХреГрдкрдпрд╛ KMC рд╕реЗрд╡рд╛рдВрдмрджреНрджрд▓ рдЖрдкрд▓рд╛ рдкреНрд░рд╢реНрди рдЯрд╛рдЗрдк рдХрд░рд╛, рдореА рддреБрдордЪреА рдорджрдд рдХрд░реЗрди:",
                    hindi: "рдХреГрдкрдпрд╛ KMC рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЕрдкрдирд╛ рдкреНрд░рд╢реНрди рдЯрд╛рдЗрдк рдХрд░реЗрдВ, рдореИрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХрд░реВрдВрдЧрд╛:"
                };
                await this.redis.setex(`state:${phoneNumber}`, 3600, 'free_text_mode');
                return prompt[language as 'english' | 'marathi' | 'hindi'];

            default:
                return this.getMainMenuMessage(language as 'english' | 'marathi' | 'hindi');
        }
    }

    private async getPropertyTaxInfo(language: string): Promise<string> {
        const response = {
            english: `ЁЯУК *Property Tax Payment Process*

*Step-by-step guide:*
1я╕ПтГг Visit: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг Click 'рдирд╡реАрди рдирд╛рдЧрд░рд┐рдХ рдиреЛрдВрджрдгреА' for new registration
3я╕ПтГг Login with your credentials
4я╕ПтГг Navigate to Service #4: 'рдорд┐рд│рдХрддрдХрд░ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг Enter property details
6я╕ПтГг Review amount and pay online

*Documents needed:*
- Address proof of property
- Previous tax bill (if available)
- Property ownership documents

*Contact:* 0231-2540291

Would you like help with registration or have other questions?`,

            marathi: `ЁЯУК *рдорд┐рд│рдХрдд рдХрд░ рднрд░рдгреНрдпрд╛рдЪреА рдкреНрд░рдХреНрд░рд┐рдпрд╛*

*рдЪрд░рдгрдмрджреНрдз рдорд╛рд░реНрдЧрджрд░реНрд╢рди:*
1я╕ПтГг рднреЗрдЯ рджреНрдпрд╛: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╡реАрди рдиреЛрдВрджрдгреАрд╕рд╛рдареА 'рдирд╡реАрди рдирд╛рдЧрд░рд┐рдХ рдиреЛрдВрджрдгреА' рд╡рд░ рдХреНрд▓рд┐рдХ рдХрд░рд╛
3я╕ПтГг рдЖрдкрд▓реНрдпрд╛ рдХреНрд░реЗрдбреЗрдВрд╢рд┐рдпрд▓рдиреЗ рд▓реЙрдЧрд┐рди рдХрд░рд╛
4я╕ПтГг рд╕реЗрд╡рд╛ #4 рд╡рд░ рдЬрд╛: 'рдорд┐рд│рдХрддрдХрд░ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг рдорд╛рд▓рдорддреНрддреЗрдЪреЗ рддрдкрд╢реАрд▓ рднрд░рд╛
6я╕ПтГг рд░рдХрдореЗрдЪреЗ рдкреБрдирд░рд╛рд╡рд▓реЛрдХрди рдХрд░рд╛ рдЖрдгрд┐ рдСрдирд▓рд╛рдЗрди рдкреЗрдореЗрдВрдЯ рдХрд░рд╛

*рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ:*
- рдорд╛рд▓рдорддреНрддреЗрдЪрд╛ рдкрддреНрддрд╛ рдкреБрд░рд╛рд╡рд╛
- рдорд╛рдЧреАрд▓ рдХрд░ рдмрд┐рд▓ (рдЙрдкрд▓рдмреНрдз рдЕрд╕рд▓реНрдпрд╛рд╕)
- рдорд╛рд▓рдорддреНрддрд╛ рдорд╛рд▓рдХреАрдЪреЗ рдХрд╛рдЧрджрдкрддреНрд░реЗ

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291

рдиреЛрдВрджрдгреАрд╕рд╛рдареА рдорджрдд рд╣рд╡реА рдЖрд╣реЗ рдХрд┐рдВрд╡рд╛ рдЗрддрд░ рдкреНрд░рд╢реНрди рдЖрд╣реЗрдд?`,

            hindi: `ЁЯУК *рд╕рдВрдкрддреНрддрд┐ рдХрд░ рднреБрдЧрддрд╛рди рдкреНрд░рдХреНрд░рд┐рдпрд╛*

*рдЪрд░рдгрдмрджреНрдз рдЧрд╛рдЗрдб:*
1я╕ПтГг рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирдП рдкрдВрдЬреАрдХрд░рдг рдХреЗ рд▓рд┐рдП 'рдирд╡реАрди рдирд╛рдЧрд░рд┐рдХ рдиреЛрдВрджрдгреА' рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ
3я╕ПтГг рдЕрдкрдиреЗ рдХреНрд░реЗрдбреЗрдВрд╢рд┐рдпрд▓реНрд╕ рд╕реЗ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
4я╕ПтГг рд╕реЗрд╡рд╛ #4 рдкрд░ рдЬрд╛рдПрдВ: 'рдорд┐рд│рдХрддрдХрд░ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг рд╕рдВрдкрддреНрддрд┐ рд╡рд┐рд╡рд░рдг рднрд░реЗрдВ
6я╕ПтГг рд░рд╛рд╢рд┐ рдХреА рд╕рдореАрдХреНрд╖рд╛ рдХрд░реЗрдВ рдФрд░ рдСрдирд▓рд╛рдЗрди рднреБрдЧрддрд╛рди рдХрд░реЗрдВ

*рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ:*
- рд╕рдВрдкрддреНрддрд┐ рдХрд╛ рдкрддрд╛ рдкреНрд░рдорд╛рдг
- рдкрд┐рдЫрд▓рд╛ рдХрд░ рдмрд┐рд▓ (рдпрджрд┐ рдЙрдкрд▓рдмреНрдз рд╣реЛ)
- рд╕рдВрдкрддреНрддрд┐ рд╕реНрд╡рд╛рдорд┐рддреНрд╡ рджрд╕реНрддрд╛рд╡реЗрдЬ

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291

рдХреНрдпрд╛ рдкрдВрдЬреАрдХрд░рдг рдореЗрдВ рдорджрдд рдЪрд╛рд╣рд┐рдП рдпрд╛ рдЕрдиреНрдп рдкреНрд░рд╢реНрди рд╣реИрдВ?`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private async getWaterSupplyInfo(language: string): Promise<string> {
        const response = {
            english: `ЁЯТз *Water Supply Services*

*Bill Payment Process:*
1я╕ПтГг Visit: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг Register/Login to citizen portal
3я╕ПтГг Navigate to Service #5: 'рдкрд╛рдгреАрдкрдЯреНрдЯреА рдердХрдмрд╛рдХреА рдкрд╣рд╛'
4я╕ПтГг Enter water connection number
5я╕ПтГг View bill amount and pay online

*New Connection:*
- Visit: mjp.maharashtra.gov.in
- Apply for new tap connection
- Application fee: тВ╣100

*Important:* 1% monthly penalty for delayed payments

*Contact:* Water Engineer - Harshajit Dilipsinh Ghatage
*Phone:* 0231-2540291`,

            marathi: `ЁЯТз *рдкрд╛рдгреА рдкреБрд░рд╡рдард╛ рд╕реЗрд╡рд╛*

*рдмрд┐рд▓ рднрд░рдгреНрдпрд╛рдЪреА рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рднреЗрдЯ рджреНрдпрд╛: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓рд╡рд░ рдиреЛрдВрджрдгреА/рд▓реЙрдЧрд┐рди рдХрд░рд╛
3я╕ПтГг рд╕реЗрд╡рд╛ #5 рд╡рд░ рдЬрд╛: 'рдкрд╛рдгреАрдкрдЯреНрдЯреА рдердХрдмрд╛рдХреА рдкрд╣рд╛'
4я╕ПтГг рдкрд╛рдгреА рдХрдиреЗрдХреНрд╢рди рдирдВрдмрд░ рдЯрд╛рдХрд╛
5я╕ПтГг рдмрд┐рд▓рдЪреА рд░рдХреНрдХрдо рдкрд╣рд╛ рдЖрдгрд┐ рдСрдирд▓рд╛рдЗрди рдкреЗрдореЗрдВрдЯ рдХрд░рд╛

*рдирд╡реАрди рдХрдиреЗрдХреНрд╢рди:*
- рднреЗрдЯ рджреНрдпрд╛: mjp.maharashtra.gov.in
- рдирд╡реАрди рдЯреЕрдк рдХрдиреЗрдХреНрд╢рдирд╕рд╛рдареА рдЕрд░реНрдЬ рдХрд░рд╛
- рдЕрд░реНрдЬ рдлреА: тВ╣100

*рдорд╣рддреНрд╡рд╛рдЪреЗ:* рдЙрд╢реАрд░рд╛ рдкреЗрдореЗрдВрдЯрд╕рд╛рдареА 1% рдорд╛рд╕рд┐рдХ рджрдВрдб

*рд╕рдВрдкрд░реНрдХ:* рдкрд╛рдгреА рдЕрднрд┐рдпрдВрддрд╛ - рд╣рд░реНрд╖рдЬрд┐рдд рджрд┐рд▓реАрдкрд╕рд┐рдВрд╣ рдШрд╛рдЯрдЧреЗ
*рдлреЛрди:* 0231-2540291`,

            hindi: `ЁЯТз *рдЬрд▓ рдЖрдкреВрд░реНрддрд┐ рд╕реЗрд╡рд╛рдПрдВ*

*рдмрд┐рд▓ рднреБрдЧрддрд╛рди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓ рдкрд░ рдкрдВрдЬреАрдХрд░рдг/рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
3я╕ПтГг рд╕реЗрд╡рд╛ #5 рдкрд░ рдЬрд╛рдПрдВ: 'рдкрд╛рдгреАрдкрдЯреНрдЯреА рдердХрдмрд╛рдХреА рдкрд╣рд╛'
4я╕ПтГг рдкрд╛рдиреА рдХрдиреЗрдХреНрд╢рди рдирдВрдмрд░ рдбрд╛рд▓реЗрдВ
5я╕ПтГг рдмрд┐рд▓ рд░рд╛рд╢рд┐ рджреЗрдЦреЗрдВ рдФрд░ рдСрдирд▓рд╛рдЗрди рднреБрдЧрддрд╛рди рдХрд░реЗрдВ

*рдирдпрд╛ рдХрдиреЗрдХреНрд╢рди:*
- рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: mjp.maharashtra.gov.in
- рдирдП рдЯреИрдк рдХрдиреЗрдХреНрд╢рди рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди рдХрд░реЗрдВ
- рдЖрд╡реЗрджрди рд╢реБрд▓реНрдХ: тВ╣100

*рдорд╣рддреНрд╡рдкреВрд░реНрдг:* рджреЗрд░ рд╕реЗ рднреБрдЧрддрд╛рди рдХреЗ рд▓рд┐рдП 1% рдорд╛рд╕рд┐рдХ рдЬреБрд░реНрдорд╛рдирд╛

*рд╕рдВрдкрд░реНрдХ:* рдЬрд▓ рдЕрднрд┐рдпрдВрддрд╛ - рд╣рд░реНрд╖рдЬрд┐рдд рджрд┐рд▓реАрдкрд╕рд┐рдВрд╣ рдШрд╛рдЯрдЧреЗ
*рдлреЛрди:* 0231-2540291`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private async getCertificateInfo(type: string, language: string): Promise<string> {
        const isBirth = type === 'birthCertificate';
        const response = {
            english: `ЁЯУЛ *${isBirth ? 'Birth' : 'Death'} Certificate Application*

*Online Process:*
1я╕ПтГг Visit: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг Register/Login to citizen portal
3я╕ПтГг Navigate to Service #7: 'рдЬрдиреНрдо рд╡ рдореГрддреНрдпреВ рдиреЛрдВрджрдгреА рдкреНрд░рдорд╛рдгрдкрддреНрд░'
4я╕ПтГг Select '${isBirth ? 'Birth' : 'Death'} Certificate'
5я╕ПтГг Fill required details
6я╕ПтГг Upload documents and pay fees

*Required Documents:*
${isBirth ?
                    'тАв Hospital discharge papers\nтАв Parents\' Aadhar cards\nтАв Parents\' marriage certificate' :
                    'тАв Death certificate from hospital\nтАв Deceased person\'s Aadhar\nтАв Family member\'s ID proof'
                }

*Contact:* 0231-2540291`,

            marathi: `ЁЯУЛ *${isBirth ? 'рдЬрдиреНрдо' : 'рдореГрддреНрдпреВ'} рдкреНрд░рдорд╛рдгрдкрддреНрд░ рдЕрд░реНрдЬ*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рднреЗрдЯ рджреНрдпрд╛: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓рд╡рд░ рдиреЛрдВрджрдгреА/рд▓реЙрдЧрд┐рди рдХрд░рд╛
3я╕ПтГг рд╕реЗрд╡рд╛ #7 рд╡рд░ рдЬрд╛: 'рдЬрдиреНрдо рд╡ рдореГрддреНрдпреВ рдиреЛрдВрджрдгреА рдкреНрд░рдорд╛рдгрдкрддреНрд░'
4я╕ПтГг '${isBirth ? 'рдЬрдиреНрдо' : 'рдореГрддреНрдпреВ'} рдкреНрд░рдорд╛рдгрдкрддреНрд░' рдирд┐рд╡рдбрд╛
5я╕ПтГг рдЖрд╡рд╢реНрдпрдХ рддрдкрд╢реАрд▓ рднрд░рд╛
6я╕ПтГг рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЕрдкрд▓реЛрдб рдХрд░рд╛ рдЖрдгрд┐ рдлреА рднрд░рд╛

*рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ:*
${isBirth ?
                    'тАв рд╣реЙрд╕реНрдкрд┐рдЯрд▓ рдбрд┐рд╕реНрдЪрд╛рд░реНрдЬ рдкреЗрдкрд░реНрд╕\nтАв рдкрд╛рд▓рдХрд╛рдВрдЪреЗ рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб\nтАв рдкрд╛рд▓рдХрд╛рдВрдЪреЗ рд▓рдЧреНрди рдкреНрд░рдорд╛рдгрдкрддреНрд░' :
                    'тАв рд╣реЙрд╕реНрдкрд┐рдЯрд▓рдХрдбреВрди рдореГрддреНрдпреВ рдкреНрд░рдорд╛рдгрдкрддреНрд░\nтАв рдореГрдд рд╡реНрдпрдХреНрддреАрдЪреЗ рдЖрдзрд╛рд░\nтАв рдХреБрдЯреБрдВрдмрд╛рддреАрд▓ рд╕рджрд╕реНрдпрд╛рдЪрд╛ рдЖрдпрдбреА рдкреБрд░рд╛рд╡рд╛'
                }

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291`,

            hindi: `ЁЯУЛ *${isBirth ? 'рдЬрдиреНрдо' : 'рдореГрддреНрдпреБ'} рдкреНрд░рдорд╛рдг рдкрддреНрд░ рдЖрд╡реЗрджрди*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓ рдкрд░ рдкрдВрдЬреАрдХрд░рдг/рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
3я╕ПтГг рд╕реЗрд╡рд╛ #7 рдкрд░ рдЬрд╛рдПрдВ: 'рдЬрдиреНрдо рд╡ рдореГрддреНрдпреВ рдиреЛрдВрджрдгреА рдкреНрд░рдорд╛рдгрдкрддреНрд░'
4я╕ПтГг '${isBirth ? 'рдЬрдиреНрдо' : 'рдореГрддреНрдпреБ'} рдкреНрд░рдорд╛рдг рдкрддреНрд░' рдЪреБрдиреЗрдВ
5я╕ПтГг рдЖрд╡рд╢реНрдпрдХ рд╡рд┐рд╡рд░рдг рднрд░реЗрдВ
6я╕ПтГг рджрд╕реНрддрд╛рд╡реЗрдЬ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдФрд░ рд╢реБрд▓реНрдХ рднрд░реЗрдВ

*рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ:*
${isBirth ?
                    'тАв рдЕрд╕реНрдкрддрд╛рд▓ рдбрд┐рд╕реНрдЪрд╛рд░реНрдЬ рдкреЗрдкрд░реНрд╕\nтАв рдорд╛рддрд╛-рдкрд┐рддрд╛ рдХреЗ рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб\nтАв рдорд╛рддрд╛-рдкрд┐рддрд╛ рдХрд╛ рд╡рд┐рд╡рд╛рд╣ рдкреНрд░рдорд╛рдг рдкрддреНрд░' :
                    'тАв рдЕрд╕реНрдкрддрд╛рд▓ рд╕реЗ рдореГрддреНрдпреБ рдкреНрд░рдорд╛рдг рдкрддреНрд░\nтАв рдореГрддрдХ рд╡реНрдпрдХреНрддрд┐ рдХрд╛ рдЖрдзрд╛рд░\nтАв рдкрд░рд┐рд╡рд╛рд░ рдХреЗ рд╕рджрд╕реНрдп рдХрд╛ рдЖрдИрдбреА рдкреНрд░реВрдл'
                }

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private async getBusinessLicenseInfo(language: string): Promise<string> {
        const response = {
            english: `ЁЯУД *Business License Application*

*Online Process:*
1я╕ПтГг Visit: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг Register/Login to citizen portal
3я╕ПтГг For new license: Service #11: 'рдмрд╛рдВрдзрдХрд╛рдо рдкрд░рд╡рд╛рдирдЧреА'
4я╕ПтГг For renewals: Service #6: 'рдкрд░рд╡рд╛рдирд╛ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг Fill business details
6я╕ПтГг Upload documents and pay fees

*Required Documents:*
- Business address proof
- Owner's ID and address proof
- Shop establishment documents
- NOC from fire department (if required)

*Contact:* 0231-2540291`,

            marathi: `ЁЯУД *рд╡реНрдпрд╡рд╕рд╛рдп рдкрд░рд╡рд╛рдирд╛ рдЕрд░реНрдЬ*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рднреЗрдЯ рджреНрдпрд╛: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓рд╡рд░ рдиреЛрдВрджрдгреА/рд▓реЙрдЧрд┐рди рдХрд░рд╛
3я╕ПтГг рдирд╡реАрди рдкрд░рд╡рд╛рдиреНрдпрд╛рд╕рд╛рдареА: рд╕реЗрд╡рд╛ #11: 'рдмрд╛рдВрдзрдХрд╛рдо рдкрд░рд╡рд╛рдирдЧреА'
4я╕ПтГг рдиреВрддрдиреАрдХрд░рдгрд╛рд╕рд╛рдареА: рд╕реЗрд╡рд╛ #6: 'рдкрд░рд╡рд╛рдирд╛ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг рд╡реНрдпрд╡рд╕рд╛рдпрд╛рдЪреЗ рддрдкрд╢реАрд▓ рднрд░рд╛
6я╕ПтГг рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЕрдкрд▓реЛрдб рдХрд░рд╛ рдЖрдгрд┐ рдлреА рднрд░рд╛

*рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ:*
- рд╡реНрдпрд╡рд╕рд╛рдпрд╛рдЪрд╛ рдкрддреНрддрд╛ рдкреБрд░рд╛рд╡рд╛
- рдорд╛рд▓рдХрд╛рдЪрд╛ рдЖрдпрдбреА рдЖрдгрд┐ рдкрддреНрддрд╛ рдкреБрд░рд╛рд╡рд╛
- рджреБрдХрд╛рди рд╕реНрдерд╛рдкрдирд╛ рдХрд╛рдЧрджрдкрддреНрд░реЗ
- рдЕрдЧреНрдирд┐рд╢рдорди рд╡рд┐рднрд╛рдЧрд╛рдХрдбреВрди NOC (рдЖрд╡рд╢реНрдпрдХ рдЕрд╕рд▓реНрдпрд╛рд╕)

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291`,

            hindi: `ЁЯУД *рд╡реНрдпрд╛рдкрд╛рд░ рд▓рд╛рдЗрд╕реЗрдВрд╕ рдЖрд╡реЗрджрди*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓ рдкрд░ рдкрдВрдЬреАрдХрд░рдг/рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
3я╕ПтГг рдирдП рд▓рд╛рдЗрд╕реЗрдВрд╕ рдХреЗ рд▓рд┐рдП: рд╕реЗрд╡рд╛ #11: 'рдмрд╛рдВрдзрдХрд╛рдо рдкрд░рд╡рд╛рдирдЧреА'
4я╕ПтГг рдирд╡реАрдиреАрдХрд░рдг рдХреЗ рд▓рд┐рдП: рд╕реЗрд╡рд╛ #6: 'рдкрд░рд╡рд╛рдирд╛ рдердХрдмрд╛рдХреА рдкрд╣рд╛'
5я╕ПтГг рд╡реНрдпрд╛рдкрд╛рд░ рд╡рд┐рд╡рд░рдг рднрд░реЗрдВ
6я╕ПтГг рджрд╕реНрддрд╛рд╡реЗрдЬ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдФрд░ рд╢реБрд▓реНрдХ рднрд░реЗрдВ

*рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬ:*
- рд╡реНрдпрд╛рдкрд╛рд░ рдкрддрд╛ рдкреНрд░рдорд╛рдг
- рдорд╛рд▓рд┐рдХ рдХрд╛ рдЖрдИрдбреА рдФрд░ рдкрддрд╛ рдкреНрд░рдорд╛рдг
- рджреБрдХрд╛рди рд╕реНрдерд╛рдкрдирд╛ рджрд╕реНрддрд╛рд╡реЗрдЬ
- рдЕрдЧреНрдирд┐рд╢рдорди рд╡рд┐рднрд╛рдЧ рд╕реЗ NOC (рдпрджрд┐ рдЖрд╡рд╢реНрдпрдХ рд╣реЛ)

*рд╕рдВрдкрд░реНрдХ:* 0231-2540291`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private async getComplaintInfo(language: string): Promise<string> {
        const response = {
            english: `ЁЯУЭ *Register Complaint*

*Online Process:*
1я╕ПтГг Visit: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг Register/Login to citizen portal
3я╕ПтГг Navigate to Service #8: 'рддрдХреНрд░рд╛рд░ рд╕реНрдерд┐рддреА'
4я╕ПтГг Register new complaint
5я╕ПтГг Fill complaint details
6я╕ПтГг Submit and track status online

*Types of Complaints:*
- Road maintenance issues
- Water supply problems
- Garbage collection
- Street light issues
- Drainage problems

*Emergency Contact:* 0231-2540291`,

            marathi: `ЁЯУЭ *рддрдХреНрд░рд╛рд░ рдиреЛрдВрджрд╡рд╛*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рднреЗрдЯ рджреНрдпрд╛: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓рд╡рд░ рдиреЛрдВрджрдгреА/рд▓реЙрдЧрд┐рди рдХрд░рд╛
3я╕ПтГг рд╕реЗрд╡рд╛ #8 рд╡рд░ рдЬрд╛: 'рддрдХреНрд░рд╛рд░ рд╕реНрдерд┐рддреА'
4я╕ПтГг рдирд╡реАрди рддрдХреНрд░рд╛рд░ рдиреЛрдВрджрд╡рд╛
5я╕ПтГг рддрдХреНрд░рд╛рд░реАрдЪреЗ рддрдкрд╢реАрд▓ рднрд░рд╛
6я╕ПтГг рд╕рдмрдорд┐рдЯ рдХрд░рд╛ рдЖрдгрд┐ рдСрдирд▓рд╛рдЗрди рд╕реНрдерд┐рддреА рдЯреНрд░реЕрдХ рдХрд░рд╛

*рддрдХреНрд░рд╛рд░реАрдЪреЗ рдкреНрд░рдХрд╛рд░:*
- рд░рд╕реНрддрд╛ рджреБрд░реБрд╕реНрддреАрдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛
- рдкрд╛рдгреА рдкреБрд░рд╡рдареНрдпрд╛рдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛
- рдХрдЪрд░рд╛ рдЧреЛрд│рд╛ рдХрд░рдгреЗ
- рд░рд╕реНрддрд╛ рджрд┐рд╡реНрдпрд╛рдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛
- рдЧрдЯрд╛рд░реАрдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛

*рдЖрдкрддреНрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ:* 0231-2540291`,

            hindi: `ЁЯУЭ *рд╢рд┐рдХрд╛рдпрдд рджрд░реНрдЬ рдХрд░реЗрдВ*

*рдСрдирд▓рд╛рдЗрди рдкреНрд░рдХреНрд░рд┐рдпрд╛:*
1я╕ПтГг рд╡рд┐рдЬрд┐рдЯ рдХрд░реЗрдВ: https://web.kolhapurcorporation.gov.in/citizen
2я╕ПтГг рдирд╛рдЧрд░рд┐рдХ рдкреЛрд░реНрдЯрд▓ рдкрд░ рдкрдВрдЬреАрдХрд░рдг/рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
3я╕ПтГг рд╕реЗрд╡рд╛ #8 рдкрд░ рдЬрд╛рдПрдВ: 'рддрдХреНрд░рд╛рд░ рд╕реНрдерд┐рддреА'
4я╕ПтГг рдирдИ рд╢рд┐рдХрд╛рдпрдд рджрд░реНрдЬ рдХрд░реЗрдВ
5я╕ПтГг рд╢рд┐рдХрд╛рдпрдд рдХрд╛ рд╡рд┐рд╡рд░рдг рднрд░реЗрдВ
6я╕ПтГг рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ рдФрд░ рдСрдирд▓рд╛рдЗрди рд╕реНрдерд┐рддрд┐ рдЯреНрд░реИрдХ рдХрд░реЗрдВ

*рд╢рд┐рдХрд╛рдпрдд рдХреЗ рдкреНрд░рдХрд╛рд░:*
- рд╕рдбрд╝рдХ рд░рдЦрд░рдЦрд╛рд╡ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ
- рдкрд╛рдиреА рдХреА рдЖрдкреВрд░реНрддрд┐ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ
- рдХрдЪрд░рд╛ рд╕рдВрдЧреНрд░рд╣
- рд╕реНрдЯреНрд░реАрдЯ рд▓рд╛рдЗрдЯ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ
- рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ

*рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ:* 0231-2540291`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private getContactInfo(language: string): string {
        const response = {
            english: `ЁЯУЮ *Kolhapur Municipal Corporation Contact*

*Main Office:*
Phone: 0231-2540291
Email: commissionerkmc@rediffmail.com

*Commissioner:* K Manjulekshmi

*Office Address:*
Kolhapur Municipal Corporation
Kolhapur, Maharashtra

*Portal:* https://web.kolhapurcorporation.gov.in/

*Office Hours:*
Monday to Saturday: 10:00 AM - 5:00 PM

*Emergency Services:* Available 24/7`,

            marathi: `ЁЯУЮ *рдХреЛрд▓реНрд╣рд╛рдкреВрд░ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛ рд╕рдВрдкрд░реНрдХ*

*рдореБрдЦреНрдп рдХрд╛рд░реНрдпрд╛рд▓рдп:*
рдлреЛрди: 0231-2540291
рдИрдореЗрд▓: commissionerkmc@rediffmail.com

*рдЖрдпреБрдХреНрдд:* рдХреЗ рдордВрдЬреБрд▓реЗрдХреНрд╖реНрдореА

*рдХрд╛рд░реНрдпрд╛рд▓рдпрд╛рдЪрд╛ рдкрддреНрддрд╛:*
рдХреЛрд▓реНрд╣рд╛рдкреВрд░ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛
рдХреЛрд▓реНрд╣рд╛рдкреВрд░, рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░

*рдкреЛрд░реНрдЯрд▓:* https://web.kolhapurcorporation.gov.in/

*рдХрд╛рд░реНрдпрд╛рд▓рдпреАрди рд╡реЗрд│рд╛:*
рд╕реЛрдорд╡рд╛рд░ рддреЗ рд╢рдирд┐рд╡рд╛рд░: рд╕рдХрд╛рд│реА 10:00 - рд╕рдВрдзреНрдпрд╛рдХрд╛рд│реА 5:00

*рдЖрдкрддреНрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛:* 24/7 рдЙрдкрд▓рдмреНрдз`,

            hindi: `ЁЯУЮ *рдХреЛрд▓реНрд╣рд╛рдкреБрд░ рдирдЧрд░ рдирд┐рдЧрдо рд╕рдВрдкрд░реНрдХ*

*рдореБрдЦреНрдп рдХрд╛рд░реНрдпрд╛рд▓рдп:*
рдлреЛрди: 0231-2540291
рдИрдореЗрд▓: commissionerkmc@rediffmail.com

*рдЖрдпреБрдХреНрдд:* рдХреЗ рдордВрдЬреБрд▓реЗрдХреНрд╖реНрдореА

*рдХрд╛рд░реНрдпрд╛рд▓рдп рдХрд╛ рдкрддрд╛:*
рдХреЛрд▓реНрд╣рд╛рдкреБрд░ рдирдЧрд░ рдирд┐рдЧрдо
рдХреЛрд▓реНрд╣рд╛рдкреБрд░, рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░

*рдкреЛрд░реНрдЯрд▓:* https://web.kolhapurcorporation.gov.in/

*рдХрд╛рд░реНрдпрд╛рд▓рдп рд╕рдордп:*
рд╕реЛрдорд╡рд╛рд░ рд╕реЗ рд╢рдирд┐рд╡рд╛рд░: рд╕реБрдмрд╣ 10:00 - рд╢рд╛рдо 5:00

*рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛:* 24/7 рдЙрдкрд▓рдмреНрдз`
        };

        return response[language as 'english' | 'marathi' | 'hindi'] + "\n\n" + this.getMenuReminder(language);
    }

    private shouldShowMenu(body: string): boolean {
        const menuTriggers = ['menu', 'help', 'options', 'services', 'рдореЗрдиреВ', 'рдорджрдд', 'рд╕реЗрд╡рд╛', 'рдореЗрдиреНрдпреВ', 'рд╕рд╣рд╛рдпрддрд╛'];
        return menuTriggers.some(trigger => body.toLowerCase().includes(trigger));
    }

    private getMenuReminder(language: string): string {
        const reminder = {
            english: "ЁЯТм Type 'menu' to see all options again or contact us at 0231-2540291",
            marathi: "ЁЯТм рд╕рд░реНрд╡ рдкрд░реНрдпрд╛рдп рдкреБрдиреНрд╣рд╛ рдкрд╛рд╣рдгреНрдпрд╛рд╕рд╛рдареА 'menu' рдЯрд╛рдЗрдк рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ 0231-2540291 рд╡рд░ рд╕рдВрдкрд░реНрдХ рдХрд░рд╛",
            hindi: "ЁЯТм рд╕рднреА рд╡рд┐рдХрд▓реНрдк рдлрд┐рд░ рд╕реЗ рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП 'menu' рдЯрд╛рдЗрдк рдХрд░реЗрдВ рдпрд╛ 0231-2540291 рдкрд░ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ"
        };
        return `---\n${reminder[language as 'english' | 'marathi' | 'hindi']}`;
    }

    // Process with your existing KMC AI logic
    private async processWithKMCAI(userMessage: string, history: ChatMessage[], language: string): Promise<string> {
        try {
            // Use your existing buildMCPPrompt and kmcContextTool logic
            const systemPrompt = await this.buildKMCPrompt(language);

            const result = await streamText({
                model: google("gemini-2.0-flash"),
                system: systemPrompt,
                temperature: 0.3,
                maxSteps: 10,
                tools: {
                    kmcContextTool
                },
                messages: [
                    ...history,
                    { role: 'user', content: userMessage }
                ],
            });

            let fullResponse = '';
            for await (const textPart of result.textStream) {
                fullResponse += textPart;
            }

            return fullResponse || "I apologize, but I couldn't generate a proper response. Please try asking about KMC services or type 'menu' to see options.";
        } catch (error) {
            console.error('KMC AI processing error:', error);
            return "I'm having trouble processing your request. Please type 'menu' to see service options or contact KMC at 0231-2540291.";
        }
    }

    private async buildKMCPrompt(language: string): Promise<string> {
        // Copy your existing buildMCPPrompt function logic here
        const now = new Date();
        const date = now.toLocaleDateString("en-IN");
        const time = now.toLocaleTimeString("en-IN", {
            hour: "2-digit",
            minute: "2-digit",
        });

        let languageInstruction = '';
        if (language === 'marathi') {
            languageInstruction = 'Respond ONLY in Marathi (рдорд░рд╛рдареА). All responses must be in Marathi language.';
        } else if (language === 'hindi') {
            languageInstruction = 'Respond ONLY in Hindi (рд╣рд┐рдВрджреА). All responses must be in Hindi language.';
        } else if (language === 'english') {
            languageInstruction = 'Respond ONLY in English. All responses must be in English language.';
        }

        return `
You are an official WhatsApp assistant for Kolhapur Municipal Corporation (KMC), established in 1954 and upgraded to municipal corporation in 1982.

System Context:
- Current Date: ${date}
- Current Time: ${time}
- Platform: WhatsApp (Twilio)
- Language: ${language}

**STRICT OPERATIONAL RULES:**
1. **ONLY respond to KMC-related queries** - Property tax, water supply, health services, licenses, fire department, birth/death certificates, PWD, municipal services, KMC operations, etc.
2. **REFUSE all non-KMC topics** - Do NOT answer questions about general knowledge, other cities, entertainment, technology, personal advice, etc.
3. **Language Protocol**: ${languageInstruction}

**WHATSAPP-SPECIFIC FORMATTING:**
- Keep responses concise and mobile-friendly (under 1500 characters)
- Use simple formatting with emojis
- Break long responses into shorter paragraphs
- Provide direct links without complex formatting
- Include phone numbers in clickable format

**KEY DEPARTMENTS & SERVICES:**
1. **Property Tax** ЁЯУК - Handle assessments, payments and queries
2. **Water Supply** ЁЯТз - Bill payments (1% monthly penalty for delays), maintenance requests  
3. **Health Sanitation** ЁЯПе - Waste management, hospital services
4. **License** ЁЯУД - Business permits and documentation
5. **Fire Department** ЁЯЪТ - Emergency services and safety compliance
6. **Birth/Death Registry** ЁЯУЛ - Certificate issuance and records
7. **PWD** ЁЯПЧя╕П - Infrastructure maintenance and tender information

**RESPONSE GUIDELINES:**
1. Use kmcContextTool to get accurate step-by-step processes
2. Always guide through official KMC portal: https://web.kolhapurcorporation.gov.in/citizen
3. Provide complete form-filling instructions before payment
4. Include required documents and preparation steps
5. Keep responses under 1500 characters when possible
6. Use bullet points for lists
7. Provide contact: 0231-2540291

**For Non-KMC Topics:**
Respond with: "I can only assist with Kolhapur Municipal Corporation related queries. Please ask about KMC services or type 'menu' to see options."

Always use kmcContextTool to provide accurate information and step-by-step guidance.
`;
    }

    async sendMessage(to: string, message: string): Promise<void> {
        await this.twilioClient.messages.create({
            from: process.env.TWILIO_WHATSAPP_NUMBER!,
            to: to,
            body: message
        });
    }

    // Handle commands like /help, /clear, etc.
    async handleCommand(command: string, phoneNumber: string): Promise<string | null> {
        const cmd = command.toLowerCase().trim();

        switch (cmd) {
            case '/help':
                const userLanguage = await this.redis.get(`lang:${phoneNumber}`) || 'english';
                return this.getMainMenuMessage(userLanguage as 'english' | 'marathi' | 'hindi');

            case '/clear':
                // Clear all Redis data for this user
                await this.redis.del(`chat:${phoneNumber}`);
                await this.redis.del(`lang:${phoneNumber}`);
                await this.redis.del(`state:${phoneNumber}`);
                await this.redis.del(`context:${phoneNumber}`);
                console.log(`ЁЯЧСя╕П Cleared all data for ${phoneNumber}`);
                return "тЬЕ Conversation history cleared! You can start fresh.";

            case '/menu':
                const language = await this.redis.get(`lang:${phoneNumber}`) || 'english';
                return this.getMainMenuMessage(language as 'english' | 'marathi' | 'hindi');

            default:
                return null;
        }
    }
}